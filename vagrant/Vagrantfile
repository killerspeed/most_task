Vagrant.configure("2") do |config|
    servers=[
        {
          :hostname => "most3",
          :ip => "172.18.1.15",
          :name => 'most3'
        }
      ]

    servers.each do |machine|
        config.vm.define machine[:hostname] do |node|
            node.vm.box = "ubuntu/jammy64"
            node.vm.hostname = machine[:hostname]
            node.vm.network :private_network, ip: machine[:ip]
			node.vm.network "forwarded_port", guest: 80, host: 80
			node.vm.network "forwarded_port", guest: 10050, host: 10050
			node.vm.network "forwarded_port", guest: 80, host: 8080
			node.vm.network "forwarded_port", guest: 8080, host: 80
			config.vm.synced_folder "C:/Users/king/Desktop/most_task/jenkins", "/home/vagrant/jenkins"
            node.vm.provision "shell", inline: <<-SHELL
			# Обновление системы
                sudo apt update && sudo apt upgrade -y
				sudo apt dist-upgrade -y
				sudo apt autoremove -y
				sudo apt install -y wget curl gnupg2 software-properties-common

			# ========== Установка Docker ==========
			    sudo apt install apt-transport-https ca-certificates curl software-properties-common
                curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
                sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
                sudo apt update
                sudo apt install docker-ce -y
                sudo systemctl start docker

                # ========== Установка jenkins-Docker ==========
				docker network create jenkins
				sudo docker run \
						--name jenkins-docker \
						--rm \
						--detach \
						--privileged \
						--network jenkins \
						--network-alias docker \
						--env DOCKER_TLS_CERTDIR=/certs \
						--volume jenkins-docker-certs:/certs/client \
						--volume jenkins-data:/var/jenkins_home \
						--publish 2376:2376 \
						docker:dind \
						--storage-driver overlay2
				cd jenkins/
				docker build -t myjenkins-blueocean:2.504.1-1 .
				docker run \
  --name jenkins-blueocean \
  --restart=on-failure \
  --detach \
  --network jenkins \
  --env DOCKER_HOST=tcp://docker:2376 \
  --env DOCKER_CERT_PATH=/certs/client \
  --env DOCKER_TLS_VERIFY=1 \
  --publish 8080:8080 \
  --publish 50000:50000 \
  --volume jenkins-data:/var/jenkins_home \
  --volume jenkins-docker-certs:/certs/client:ro \
  myjenkins-blueocean:2.504.1-1

			# ========== Установка PostgreSQL ==========
				sudo sh -c 'echo "deb https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
				wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -

			# ========== Установка Zabbix ==========
				wget https://repo.zabbix.com/zabbix/6.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest_6.0+ubuntu22.04_all.deb
				sudo dpkg -i zabbix-release_latest_6.0+ubuntu22.04_all.deb
				sudo apt update
				sudo apt install -y postgresql-15 postgresql-client-15
				sudo apt install -y zabbix-server-pgsql zabbix-frontend-php php8.1-pgsql zabbix-nginx-conf zabbix-sql-scripts zabbix-agent

			# Настройка БД
				sudo -u postgres psql -c "CREATE USER zabbix WITH PASSWORD 'strong_password'"
				sudo -u postgres psql -c "CREATE DATABASE zabbix OWNER zabbix"
				zcat /usr/share/zabbix-sql-scripts/postgresql/server.sql.gz | sudo -u zabbix psql zabbix

			# Конфигурация Zabbix Server
				sudo sed -i 's/^# DBHost.*/DBHost=localhost/' /etc/zabbix/zabbix_server.conf
				sudo sed -i 's/^# DBPassword.*/DBPassword=strong_password/' /etc/zabbix/zabbix_server.conf

			# Конфигурация Nginx
				sudo sed -i 's/^#        listen          8080;.*/listen 172.18.1.15:80;/' /etc/zabbix/nginx.conf
				sudo sed -i 's/^#        server_name     example.com;.*/server_name 172.18.1.15;/' /etc/zabbix/nginx.conf

			# Перезапуск и включение сервисов
				sudo systemctl restart postgresql
				sudo systemctl enable --now zabbix-server zabbix-agent nginx php8.1-fpm
				sudo systemctl restart nginx

			# Проверка статусов
				echo "Проверка статусов сервисов:"
				sudo systemctl status docker postgresql zabbix-server zabbix-agent nginx --no-pager
            SHELL

            node.vm.provider :virtualbox do |vb|
                vb.customize ["modifyvm", :id, "--memory", 2048, "--cpus", 2]
                vb.name = machine[:name]
            end
                end
    end
end